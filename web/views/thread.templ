package views

import (
	"fmt"
	"github.com/dominicf2001/comfychan/internal/database"
	"github.com/dominicf2001/comfychan/internal/util"
	"github.com/dominicf2001/comfychan/web/views/shared"
	"strconv"
)

func getPostClass(isOp bool) string {
	if isOp {
		return "post-op"
	}
	return "post"
}

templ ThreadPost(post database.Post, thread *database.Thread) {
	{{ isOp := thread != nil }}
	<article id={ fmt.Sprintf("post-%d", post.Id) } class={ getPostClass(isOp) }>
		if post.MediaPath != "" {
			<div class="post-img-container">
				<img src={ fmt.Sprintf("/static/img/posts/%s", post.MediaPath) } class="post-img"/>
			</div>
		}
		<header class="post-header">
			if isOp && thread.Subject != "" {
				<h1 class="thread-subject">{ thread.Subject } -</h1>
			}
			<span class="post-author">{ post.Author }</span>
			<span class="post-date">{ post.CreatedAt.Format("01/02/2006") }</span>
			<span class="post-time">{ post.CreatedAt.Format("15:04") }</span>
			<span
				_={ fmt.Sprintf("on click set #newPostBody.value to #newPostBody.value + '>>%d\n'", post.Id) }
				class=" post-num"
			>
				No. { strconv.Itoa(post.Id) }
			</span>
		</header>
		<p>
			@templ.Raw(util.EnrichPost(post.Body))
		</p>
	</article>
}

templ ThreadPosts(posts []database.Post) {
	for _, post := range (posts) {
		@ThreadPost(post, nil)
		<br/>
	}
}

templ Thread(board database.Board, thread database.Thread, posts []database.Post) {
	@shared.Layout() {
		@BoardHeader(board)
		<div class="new-post-container">
			<form
				hx-encoding="multipart/form-data"
				id="newPostForm"
				hx-swap="none"
				hx-post={ fmt.Sprintf("/%s/threads/%d",
		board.Slug, thread.Id) }
				_="on htmx:afterRequest 
			set #newPostBody.value to ''
			then set #newPostFile.value to ''
			then trigger refreshPosts on body"
			>
				<table>
					<tbody>
						<tr class="new-post-form-field">
							<th>comment</th>
							<td><textarea id="newPostBody" name="body" required></textarea></td>
						</tr>
						<tr class="new-post-form-field">
							<th>File</th>
							<td><input id="newPostFile" name="file" type="file"/></td>
						</tr>
					</tbody>
				</table>
				<button type="submit">Submit</button>
			</form>
		</div>
		<div class="thread">
			@ThreadPost(posts[0], &thread)
			<div hx-get={ fmt.Sprintf("/hx/%s/threads/%d/posts", board.Slug, thread.Id) } hx-trigger="refreshPosts from:body">
				@ThreadPosts(posts[1:])
			</div>
		</div>
	}
}
